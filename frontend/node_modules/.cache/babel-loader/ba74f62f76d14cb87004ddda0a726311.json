{"remainingRequest":"/Users/berlin/Documents/platform/frontend/node_modules/babel-loader/lib/index.js!/Users/berlin/Documents/platform/frontend/src/mixins/schedule.js","dependencies":[{"path":"/Users/berlin/Documents/platform/frontend/src/mixins/schedule.js","mtime":1634085832809},{"path":"/Users/berlin/Documents/platform/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1634257404436},{"path":"/Users/berlin/Documents/platform/frontend/node_modules/babel-loader/lib/index.js","mtime":1634257405404}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/berlin/Documents/platform/frontend/src/mixins/schedule.js"],"names":["eventBrandingTypes","class","diversityEvents","placeholderCategory","Object","keys","methods","selectTitleItem","day","selectedDay","getTimeDescriptionForEvent","event","start_time","start","Date","end","end_time","getDayOfTheWeek","formatAMPM","getBannerImgForEvent","images","require","context","category","openScheduleModal","timeWindow","scheduleColumn","selectedEvent","formattedEvents","find","column","$bvModal","show","openScheduleModalDirect","generateAddToCalendarLink","calendarService","getDateString","timestring","toISOString","split","timezone","link","getLinkForEvent","encodeURI","event_name","zoom_link","getTagsForEvent","tags","populateDays","currentDate","startDate","getDate","endDate","days","push","setDate","nowString","toDateString","today","prepareTimeWindows","midnight","setHours","currentTime","timeWindows","setMinutes","getMinutes","getDurationOfEvent","eventObj","diff","getTime","processRawEvents","i","rawEvents","branding","JSON","parse","stringify","alreadyOccurred","addedToUserList","eventsInUserList","map","event_id","includes","id","addedEventId","display_horizons_icon","length","forEach","getEventsForTimeWindow","convertTimeWindowTo24HourFormat","substr","indexOf","parseInt","toString","eventsForWindow","filter","rawEvent","rawEventStart","previousColumns","randomColumn","Math","floor","random","scheduleColumns","getFavoriteIconForEvent","toggleEventInList","targetEvent","$forceUpdate","addEventToUserListParams","user_id","getUserId","performPostRequest","getEnvVariable","addedId","removeEventParams","getEventsFromUserList","userParams","performGetRequest","Items","computed","getScheduleTimeLineWindow","d","hours","getHours","minutes"],"mappings":"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","sourcesContent":["const eventBrandingTypes = {\n  'workshop-event': {\n    class: 'workshop-event',\n  },\n  'main-event': {\n    class: 'main-event',\n  },\n  'food-event': {\n    class: 'food-event',\n  },\n  'mini-event': {\n    class: 'mini-event',\n  },\n  'demo-event': {\n    class: 'demo-event',\n  },\n};\nconst diversityEvents = ['PLUMAS Social Justice and Tech', 'Trivia Night', 'Technichat: Diversity and Inclusion', 'TCM: Underrepresented People in Tech', 'Technichat: Women in Tech', 'TCM: Tech for Social Good', 'TCM: Non-Traditional Roles in Tech'];\nconst placeholderCategory = Object.keys(eventBrandingTypes)[0];\n\nexport default {\n  methods: {\n    selectTitleItem(day) {\n      this.selectedDay = day;\n    },\n    getTimeDescriptionForEvent(event) {\n      if (event.start_time) {\n        const start = new Date(event.start_time);\n        const end = new Date(event.end_time);\n        return `${this.getDayOfTheWeek(start)}, ${this.formatAMPM(start)} – ${this.formatAMPM(end)}`;\n      }\n      return '';\n    },\n    getBannerImgForEvent(event) {\n      // Returns the banner image URL for the event, which corresponds to its category\n      // If it doesn't have a valid category, exit\n      const images = require.context('../assets/event-banners', false, /\\.jpg$/);\n      const category = eventBrandingTypes[event.category]\n        ? event.category\n        : placeholderCategory;\n\n      return images(`./${category}.jpg`);\n    },\n    openScheduleModal(selectedDay, timeWindow, scheduleColumn) {\n      // eslint-disable-next-line max-len\n      this.selectedEvent = this.formattedEvents[selectedDay][timeWindow].find((event) => event.column === scheduleColumn);\n      this.selectedEvent.selectedDay = selectedDay;\n      this.selectedEvent.timeWindow = timeWindow;\n      this.selectedEvent.scheduleColumn = scheduleColumn;\n      this.$bvModal.show('scheduleEventModal');\n    },\n    openScheduleModalDirect(event) {\n      this.selectedEvent = event;\n      this.$bvModal.show('scheduleEventModal');\n    },\n    generateAddToCalendarLink(event, calendarService) {\n      // Recast date strings to dates to get strings that work well with the calndr.link API\n      const getDateString = (timestring) => new Date(timestring).toISOString().split('.')[0];\n      const start = getDateString(event.start_time);\n      const end = getDateString(event.end_time);\n      const timezone = 'UTC';\n      const link = this.getLinkForEvent(event);\n      return encodeURI(\n        `https://calndr.link/d/event/?service=${calendarService}&start=${start}&end=${end}&timezone=${timezone}&title=${event.event_name}&location=${link}&calname=bitcamp-event&description=Click to join the event: ${link}.`,\n      );\n    },\n    getLinkForEvent(event) {\n      return event.zoom_link || event.link || 'https://platform.bit.camp';\n    },\n    getTagsForEvent(event) {\n      return event.tags;\n    },\n    populateDays() {\n      const currentDate = new Date(this.startDate);\n\n      // This code might not work at the end of the month\n      while (currentDate.getDate() <= this.endDate.getDate()) {\n        this.days.push(new Date(currentDate));\n        currentDate.setDate(currentDate.getDate() + 1);\n      }\n\n      // Make schedule start on the current day\n      const nowString = (new Date()).toDateString();\n      const today = this.days.find((day) => day.toDateString() === nowString);\n      this.selectedDay = today || this.days[0];\n    },\n    prepareTimeWindows() {\n      const midnight = new Date();\n      midnight.setHours(0, 0, 0, 0);\n      const currentTime = new Date(midnight);\n\n      // Go through every possible 30 minute increment in a day\n      do {\n        this.timeWindows.push(this.formatAMPM(currentTime));\n        currentTime.setMinutes(currentTime.getMinutes() + 30);\n      } while (this.formatAMPM(currentTime) !== this.formatAMPM(midnight));\n    },\n    getDurationOfEvent(start, end, eventObj) {\n      if (eventObj.event_name === 'Open Mic Night') {\n        return 120;\n      }\n      if (eventObj.event_name === 'Zine-Making Workshop') {\n        return 60;\n      }\n      const diff = end.getTime() - start.getTime();\n      return (diff / 60000);\n    },\n    processRawEvents() {\n      for (let i = 0; i < this.rawEvents.length; i += 1) {\n        // deep clone object\n        // eslint-disable-next-line max-len\n        this.rawEvents[i].branding = JSON.parse(JSON.stringify(eventBrandingTypes[this.rawEvents[i].category] || eventBrandingTypes[placeholderCategory]));\n        const start = new Date(this.rawEvents[i].start_time);\n        const end = new Date(this.rawEvents[i].end_time);\n        this.rawEvents[i].branding.class += ` length-${this.getDurationOfEvent(start, end, this.rawEvents[i])}-min`;\n        if (end < (new Date())) {\n          // this.rawEvents[i].branding.class += ' event-passed';\n          // this.rawEvents[i].alreadyOccurred = true;\n        } else {\n          this.rawEvents[i].alreadyOccurred = false;\n        }\n        this.rawEvents[i].addedToUserList = false;\n        if (this.eventsInUserList.map((event) => event.event_id).includes(this.rawEvents[i].id)) {\n          this.rawEvents[i].addedToUserList = true;\n          // eslint-disable-next-line max-len\n          this.rawEvents[i].addedEventId = this.eventsInUserList.find((event) => event.event_id === this.rawEvents[i].id).id;\n        }\n        if (diversityEvents.includes(this.rawEvents[i].event_name)) {\n          this.rawEvents[i].display_horizons_icon = true;\n        }\n      }\n      this.days.forEach((day) => {\n        this.formattedEvents[day] = {};\n        this.timeWindows.forEach((timeWindow) => {\n          this.formattedEvents[day][timeWindow] = this.getEventsForTimeWindow(timeWindow, day);\n        });\n      });\n    },\n    convertTimeWindowTo24HourFormat(timeWindow) {\n      if (timeWindow.includes('12:00AM')) {\n        return '00:00:00';\n      }\n      if (timeWindow.includes('12:30AM')) {\n        return '00:30:00';\n      }\n      if (timeWindow.includes('12:00PM')) {\n        return '12:00:00';\n      }\n      if (timeWindow.includes('12:30PM')) {\n        return '12:30:00';\n      }\n      if (timeWindow.includes('AM')) {\n        return `${timeWindow.substr(0, timeWindow.indexOf('AM'))}:00`;\n      }\n      if (timeWindow.includes(':00')) {\n        return `${(parseInt(timeWindow.substr(0, timeWindow.indexOf(':')), 10) + 12).toString()}:00:00`;\n      }\n      return `${(parseInt(timeWindow.substr(0, timeWindow.indexOf(':')), 10) + 12).toString()}:30:00`;\n    },\n    getEventsForTimeWindow(timeWindow, day) {\n      const eventsForWindow = this.rawEvents.filter((rawEvent) => {\n        const rawEventStart = (new Date(rawEvent.start_time));\n        return this.formatAMPM(rawEventStart) === timeWindow\n          && rawEventStart.getDate() === day.getDate();\n      });\n\n      const previousColumns = [];\n      eventsForWindow.forEach((event) => {\n        if (event.column) {\n          // eslint-disable-next-line no-param-reassign\n          event.column = parseInt(event.column, 10);\n        } else {\n          let randomColumn = Math.floor(Math.random() * this.scheduleColumns) + 1;\n          while (previousColumns.includes(randomColumn)) {\n            randomColumn = Math.floor(Math.random() * this.scheduleColumns) + 1;\n          }\n          // eslint-disable-next-line no-param-reassign\n          event.column = randomColumn;\n        }\n      });\n\n      return eventsForWindow;\n    },\n    getFavoriteIconForEvent(event) {\n      // Sane defaults for the file names\n      const images = require.context('../assets', false, /\\.svg|png$/);\n      return images(`./${(event.addedToUserList ? 'star_filled.svg' : 'star_empty.svg')}`);\n    },\n    async toggleEventInList(targetEvent) {\n      // eslint-disable-next-line no-param-reassign\n      targetEvent.addedToUserList = !targetEvent.addedToUserList;\n      this.$forceUpdate();\n\n      // Initialize events array if it doesn't exist\n      this.eventsInUserList = this.eventsInUserList || [];\n      if (!this.eventsInUserList.find((event) => event.event_id === targetEvent.id)) {\n        const addEventToUserListParams = {\n          user_id: this.getUserId(),\n          event_id: targetEvent.id,\n        };\n        const addedId = await this.performPostRequest(this.getEnvVariable('BACKEND'), 'schedule/user/event', addEventToUserListParams);\n        // eslint-disable-next-line no-param-reassign\n        targetEvent.addedEventId = addedId.id;\n        this.eventsInUserList.push({ event_id: targetEvent.id, id: addedId.id });\n      } else {\n        const removeEventParams = {\n          id: targetEvent.addedEventId,\n        };\n        await this.performPostRequest(this.getEnvVariable('BACKEND'), 'schedule/user/events/delete', removeEventParams);\n      }\n    },\n    async getEventsFromUserList() {\n      const userParams = {\n        user_id: this.getUserId(),\n      };\n      const rawEvents = await this.performGetRequest(this.getEnvVariable('BACKEND'), 'schedule/user/event', userParams);\n      this.eventsInUserList = rawEvents.Items;\n    },\n  },\n  computed: {\n    getScheduleTimeLineWindow() {\n      const d = new Date();\n      const hours = d.getHours();\n      let minutes = d.getMinutes();\n      if (minutes > 29) {\n        minutes = '30';\n      } else {\n        minutes = '00';\n      }\n      if (hours > 12) {\n        return `${hours - 12}:${minutes}PM`;\n      }\n      return `${hours}:${minutes}AM`;\n    },\n  },\n};\n"]}]}