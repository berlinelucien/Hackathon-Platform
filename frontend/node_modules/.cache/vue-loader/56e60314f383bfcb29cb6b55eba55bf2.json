{"remainingRequest":"/Users/berlin/Documents/platform/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/berlin/Documents/platform/frontend/src/views/Team.vue?vue&type=style&index=0&id=3c137f17&scoped=true&lang=css&","dependencies":[{"path":"/Users/berlin/Documents/platform/frontend/src/views/Team.vue","mtime":1634690659400},{"path":"/Users/berlin/Documents/platform/frontend/node_modules/css-loader/dist/cjs.js","mtime":1634257405846},{"path":"/Users/berlin/Documents/platform/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1634257408068},{"path":"/Users/berlin/Documents/platform/frontend/node_modules/postcss-loader/src/index.js","mtime":1634257406599},{"path":"/Users/berlin/Documents/platform/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1634257404436},{"path":"/Users/berlin/Documents/platform/frontend/node_modules/vue-loader/lib/index.js","mtime":1634257407250}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLnBhZ2UgewogIGJveC1zaXppbmc6IGJvcmRlci1ib3g7CiAgd2lkdGg6IDEwMCU7CiAgcGFkZGluZzogMnJlbSA0cmVtOwogIGRpc3BsYXk6IGdyaWQ7CiAgZ2FwOiAycmVtOwogIGdyaWQtdGVtcGxhdGUtcm93czogNDQwcHggNDQwcHg7CiAgZ3JpZC10ZW1wbGF0ZS1hcmVhczoKICAgICJ0ZWFtIHByb2plY3QiCiAgICAidGVhbSBvdGhlciI7CiAgcGxhY2UtaXRlbXM6IHN0cmV0Y2g7Cn0KCi50ZWFtIHsKICBncmlkLWFyZWE6IHRlYW07CiAgbWluLWhlaWdodDogMDsKfQoKLmNvcHktYnV0dG9uIHsKICB6LWluZGV4OiAwOwogIG1hcmdpbjogMDsKfQoKLmNyZWF0ZS10ZWFtLWNvbnRhaW5lciB7CiAgZGlzcGxheTogaW5saW5lLWJsb2NrOwp9CgpkaXYgOjp2LWRlZXAgI2xpbmtDb3B5VG9hc3QgewogIG1hcmdpbi10b3A6IDc1cHg7Cn0KCi5maWxsZXIgewogIGN1cnNvcjogdGV4dCAhaW1wb3J0YW50Owp9CgouY29udGVudC1jb250YWluZXIgewogIHBhZGRpbmc6IDFyZW0gMDsKICB0ZXh0LWFsaWduOiBjZW50ZXI7Cn0KCi5jaGVja2xpc3QtaXRlbSB7CiAgZmxvYXQ6IGxlZnQ7Cn0KCi5jaGVja2xpc3QtYm9keSB7CiAgd2lkdGg6IDEwMCU7CiAgZGlzcGxheTogaW5saW5lLWJsb2NrOwogIHRleHQtYWxpZ246IGxlZnQ7Cn0K"},{"version":3,"sources":["Team.vue"],"names":[],"mappingswfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"Team.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"page\">\n    <b-card class=\"team\">\n      <div v-if=\"dataLoaded\">\n        <h3 class=\"page-header\">My Team</h3>\n        <b-container>\n          <b-row\n            align-h=\"center\"\n            class=\"mt-0\"\n          >\n            <b-col cols=\"12\">\n              <p>\n                Looking for teammates to collaborate with on your hack? Head over to our <router-link :to=\"'/schedule?event=' + teamFormationEventId\">team formation event</router-link>.\n              </p>\n              <p>Once you know who your teammates are, use this page to create your team in the Technica system! You can then do things like submit your project or request a mentor as a team.</p>\n              <p>\n                <strong>You still need to create a team, even if you are a hacker working alone.</strong>\n              </p>\n            </b-col>\n          </b-row>\n\n          <div\n            v-if=\"!currentTeam && !teamCreationLoading\"\n            class=\"create-team-container\"\n          >\n            <form\n              class=\"create-team-form\"\n              @submit.prevent=\"createTeam\"\n            >\n              <div class=\"form-group\">\n                <div class=\"input-wrapper\">\n                  <input\n                    type=\"text\"\n                    class=\"form-control mx-auto\"\n                    id=\"nameInput\"\n                    placeholder=\"Enter Team Name\"\n                    v-model=\"teamName\"\n                  />\n                </div>\n              </div>\n            </form>\n            <Button\n              @click=\"createTeam()\"\n              class=\"create-team-button\"\n            >\n              Create Team\n            </Button>\n          </div>\n          <div v-if=\"teamCreationLoading\">\n            <LoadingSpinner />\n          </div>\n          <div\n            v-else\n            class=\"team-section\"\n          >\n            <b-row\n              v-if=\"currentTeam\"\n              align-h=\"center\"\n              class=\"team-list-container mt-4\"\n            >\n              <b-card class=\"w-100 mb-5\">\n                <div class=\"d-flex flex-column align-items-center justify-content-center mb-5 mt-3\">\n                  <template v-if=\"teamMembers.length < 4\">\n                    <p>To add new members to your team, send them the <strong>custom invite link</strong> below:</p>\n                    <b-input-group class=\"col-15\">\n                      <b-input\n                        readonly\n                        :value=magicInviteLink\n                        class=\"flex-0\"\n                        v-model=\"magicInviteLink\"\n                        @click=\"handleLinkInputClick\"\n                      />\n                      <b-input-group-append>\n                        <Button\n                          v-clipboard:copy=\"magicInviteLink\"\n                          v-clipboard:success=\"showLinkToast\"\n                          size=\"sm\"\n                          class=\"copy-button\"\n                        >\n                          <img\n                            class=\"btn-icon btn-icon-left\"\n                            src=\"../assets/copy-icon.svg\"\n                          >\n                          Copy Invite Link\n                        </Button>\n\n                        <b-toast\n                          id=\"linkCopyToast\"\n                          auto-hide-delay=\"2000\"\n                          variant=\"success\"\n                          no-close-button\n                        >\n                          Copied team invite link!\n                        </b-toast>\n                      </b-input-group-append>\n                    </b-input-group>\n                  </template>\n                  <p\n                    class=\"m-0\"\n                    v-else\n                  >\n                    You have reached the maximum team size and cannot invite additional\n                    members.\n                  </p>\n                </div>\n                <b-table\n                  outlined\n                  head-variant=\"light\"\n                  responsive\n                  :items=\"teamMembers\"\n                />\n\n                <ZoomButton\n                  :href=\"privateVideoLink\"\n                  class=\"create-team-button d-block m-auto\"\n                  size=\"lg\"\n                >Private Team Video Call</ZoomButton>\n\n                <Button\n                  @click=\"leaveTeam()\"\n                  class=\"create-team-button mt-3\"\n                  outlined\n                >\n                  Leave Team\n                </Button>\n\n              </b-card>\n\n            </b-row>\n          </div>\n        </b-container>\n      </div>\n      <div v-else>\n        <LoadingSpinner />\n      </div>\n    </b-card>\n    <b-card>\n      <div class=\"container mx-auto\">\n        <div v-if=\"dataLoaded && hasTeam\">\n          <h3 class=\"page-header\">{{currentTeam.name}}</h3>\n          <div\n            v-if=\"projectHasAlreadyBeenSubmitted || !readyButtonClicked\"\n            class=\"row\"\n          >\n            <div class=\"col-md-1\"></div>\n            <div class=\"col-md-10\">\n              <p>\n                If you are ready to submit your Technica Hack, please click on the button below! <b>Only one hacker needs to submit per team.</b>\n              </p>\n              <p>\n                If the button is grayed out, another member of your team has already submitted your project!\n              </p>\n              <Button\n                @click=\"clickReadyButton\"\n                :disabled=\"this.readyButtonDisabled\"\n              >\n                {{this.readyButtonText}}\n              </Button>\n            </div>\n          </div>\n\n          <div v-else>\n            <p>In order to submit your project and get credit for your hack, you'll need to complete a few steps. First, submit your hack on Devpost, then submit your hack using the fields below. Click \"Submit My Project\" when you're done. <b>If you need to edit your submission after submitting, please reach out to the Technica organizing team.</b></p>\n          </div>\n        </div>\n        <div\n          v-if=\"dataLoaded && !hasTeam\"\n          class=\"display-container\"\n          style=\"flex-direction: column; justify-content: center;\"\n        >\n          <h3 class=\"page-header\">Submit Hack</h3>\n          <div style=\"margin-bottom: 1rem;\">You must create or join a team in order to submit your project, even if you are a hacker working alone.</div>\n        </div>\n        <LoadingSpinner v-if=\"!dataLoaded\" />\n        <b-modal\n          id=\"projectSubmissionModal\"\n          title=\"Congratulations!\"\n          size=\"lg\"\n          centered\n        >\n          <p>Great work! We've received your project submission.</p>\n          <p>If you have any questions, don't hesitate to reach out to the Technica organizing team.</p>\n          <template v-slot:modal-footer>\n            <Button\n              @click=\"closeModal()\"\n              size=\"sm\"\n            >Close</Button>\n          </template>\n        </b-modal>\n      </div>\n    </b-card>\n    <b-card>\n      <div v-if=\"dataLoaded && hasTeam && !projectHasAlreadyBeenSubmitted && readyButtonClicked\">\n\n            <h4 style=\"margin-top: 0.4rem;\">I have...</h4>\n            <div class=\"content-container row-xl-6\">\n              <div class=\"checklist-body\">\n                <div\n                  v-for=\"checklistItem in checklistItems\"\n                  :key=\"checklistItem.title\"\n                  class=\"checklist-item\"\n                >\n                  <checklist-item\n                    :isChecked=\"checklistItem.checked\"\n                    :id=\"checklistItem.id\"\n                    @click=\"toggleCheckboxChecked\"\n                  >\n                    <template v-slot:text>\n                      {{ checklistItem.title }} <a\n                        :href=\"checklistItem.link\"\n                        target=\"_blank\"\n                      >{{ checklistItem.linkText }}</a>\n                    </template>\n                  </checklist-item>\n                </div>\n              </div>\n              <div>\n                <form @submit.prevent=\"sendMagicLink\">\n                  <div class=\"form-group mx-auto\">\n                    <input\n                      type=\"text\"\n                      class=\"form-control col-xl-4 mx-auto project-form-input\"\n                      id=\"nameInput\"\n                      placeholder=\"Team Name\"\n                      v-model=\"teamName\"\n                    >\n                    <input\n                      type=\"text\"\n                      class=\"form-control col-xl-4 mx-auto project-form-input\"\n                      id=\"linkInput\"\n                      placeholder=\"Devpost Link\"\n                      v-model=\"devLink\"\n                    >\n                    <!-- Prize categories will be implemented in a future ticket -->\n                    <!-- <input type=\"text\" class=\"form-control col-xl-4 mx-auto project-form-input\" id=\"emailInput\" placeholder=\"Prize Categories\" v-model=\"teamName\"> -->\n                  </div>\n                </form>\n              </div>\n            </div>\n            <Button\n              :disabled=\"checklistDisabled\"\n              @click=\"clickSubmitButton\"\n            >\n              Submit My Project\n            </Button>\n      </div>\n    </b-card>\n    <EasterEgg\n      :index=4\n      :hint=\"'You’re too good at this! Submit your project here whenever you’ve completed it. You’ve completed the Technica 2021 Scavenger Hunt!'\"\n      :fileName=\"'scavenger-hunt/5.png'\"\n    />\n  </div>\n</template>\n\n<script>\nimport Vue from 'vue';\nimport VueClipboard from 'vue-clipboard2';\nimport Button from '@/components/Button.vue';\nimport LoadingSpinner from '@/components/LoadingSpinner.vue';\nimport ZoomButton from '@/components/ZoomButton';\nimport ChecklistItem from '@/components/ChecklistItem.vue';\nimport EasterEgg from '@/components/EasterEgg.vue';\nimport generalMixin from '../mixins/general';\n\nVue.use(VueClipboard);\n\nexport default {\n  name: 'Team',\n  components: {\n    Button,\n    LoadingSpinner,\n    ZoomButton,\n    ChecklistItem,\n    EasterEgg,\n  },\n  mixins: [generalMixin],\n  data() {\n    return {\n      teamName: '',\n      invites: [],\n      invitesToCurrentTeam: [],\n      inviteEmail: '',\n      currentTeam: null,\n      dataLoaded: false,\n      teamCreationLoading: false,\n      continuePolling: true,\n      projectHasAlreadyBeenSubmitted: false,\n      readyButtonClicked: false,\n      readyButtonText: \"I'm Ready to Submit!\",\n      readyButtonDisabled: false,\n      checklistItems: [\n        {\n          title: 'completed my project and am ready to submit',\n          link: '',\n          linkText: '',\n        },\n        {\n          title: 'submitted my hack on Devpost:',\n          link: this.getEnvVariable('DEVPOST_LINK'),\n          linkText: 'Technica Devpost',\n        },\n        {\n          title: 'submitted my hack to Technica below:',\n          link: '',\n        },\n      ],\n      devLink: '',\n      currentTeamId: null,\n      checklistCounter: 0,\n    };\n  },\n  async mounted() {\n    await Promise.all([\n      this.activityTracking('TEAMS'),\n      this.getTeam(),\n    ]);\n\n    this.dataLoaded = true;\n  },\n  computed: {\n    teamFormationEventId() {\n      return this.getEnvVariable('eventIds').teamFormation;\n    },\n    teamMembers() {\n      // Only return relevant information to the table\n      return this.currentTeam.members.map((member) => ({\n        full_name: member.full_name,\n        email: member.email,\n        school: member.school,\n      }));\n    },\n    magicInviteLink() {\n      return `${document.location.origin}/join-team/${this.currentTeam.id}`;\n    },\n    privateVideoLink() {\n      return `https://video-app-0821-9375-dev.twil.io?teamId=${this.currentTeam.id}&userName=${this.getUserName()}&passcode=26223308219375`;\n    },\n    checklistDisabled() {\n      return (this.devLink === '' || this.teamName === '') || this.checklistCounter !== this.checklistItems.length;\n    },\n  },\n  methods: {\n    closeModal() {\n      this.$bvModal.hide('projectSubmissionModal');\n    },\n    async createTeam() {\n      if (this.teamName !== '') {\n        this.teamCreationLoading = true;\n        const createTeamPostParams = {\n          team_name: this.teamName,\n          project_submitted: false,\n        };\n        const createdTeam = await this.performPostRequest(\n          this.getEnvVariable('BACKEND'),\n          'teams/create',\n          createTeamPostParams,\n        );\n        await this.activityTracking('TEAM_CREATION');\n        // after creating the new team, join it\n        const joinTeamPostParams = {\n          team_id: createdTeam.id,\n          user_id: this.getUserId(),\n          team_name: this.teamName,\n        };\n        await this.performPostRequest(\n          this.getEnvVariable('BACKEND'),\n          'teams/join',\n          joinTeamPostParams,\n        );\n        await this.getTeam();\n        this.$emit('teamMembershipChanged', true);\n        this.teamName = '';\n        // create checklist items for the team\n        await this.createChecklist();\n        this.teamCreationLoading = false;\n      }\n    },\n    async createChecklist() {\n      this.checklistItems.forEach(async (item) => {\n        const createChecklistPostParams = {\n          team_id: this.currentTeam.id,\n          checklist_item_id: item.title,\n        };\n        await this.performPostRequest(\n          this.getEnvVariable('BACKEND'),\n          'projects/submission/checklist',\n          createChecklistPostParams,\n        );\n      });\n    },\n    async getTeam() {\n      const teamParams = {\n        user_id: this.getUserId(),\n      };\n      const team = await this.performGetRequest(\n        this.getEnvVariable('BACKEND'),\n        'teams/membership',\n        teamParams,\n      );\n\n      if (team[0]) {\n        const params = {\n          team_id: team[0].team_id,\n        };\n        const teamMembers = await this.performGetRequest(\n          this.getEnvVariable('BACKEND'),\n          'teams/members',\n          params,\n        );\n        this.currentTeam = {};\n        this.currentTeam.members = teamMembers.sort();\n        this.currentTeam.name = team[0].team_name;\n        this.currentTeam.id = team[0].team_id;\n        this.$emit('teamMembershipChanged', true);\n\n        this.hasTeam = true;\n\n        // check submission status of project\n        const status = await this.performGetRequest(this.getEnvVariable('BACKEND'), 'teams/submission', params);\n        this.projectHasAlreadyBeenSubmitted = status[0].project_submitted;\n        if (this.projectHasAlreadyBeenSubmitted) {\n          this.readyButtonText = 'Project has been submitted';\n          this.readyButtonDisabled = true;\n        }\n        // get checklist items for team\n        const checklist = await this.performGetRequest(this.getEnvVariable('BACKEND'), 'projects/submission/checklist', params);\n        Object.values(checklist).forEach((k) => {\n          const item = this.checklistItems.find((j) => k.checklist_item_id === j.title);\n\n          if (item) {\n            item.id = k.id;\n            item.checked = k.is_checked;\n            if (item.checked) {\n              this.readyButtonClicked = true;\n              this.checklistCounter += 1;\n            }\n          }\n        });\n        this.currentTeamId = team[0].team_id;\n      }\n    },\n    async leaveTeam() {\n      this.dataLoaded = false;\n      const params = {\n        user_id: this.getUserId(),\n      };\n      await this.performPostRequest(\n        this.getEnvVariable('BACKEND'),\n        'teams/leave',\n        params,\n      );\n      this.currentTeam = null;\n      this.teamName = '';\n      this.hasTeam = false;\n      this.invites = [];\n      this.invitesToCurrentTeam = [];\n      this.inviteEmail = '';\n      this.$emit('teamMembershipChanged', false);\n      this.dataLoaded = true;\n    },\n    /**\n     * Shows a new alert\n     */\n    showLinkToast() {\n      this.$bvToast.show('linkCopyToast');\n    },\n    /**\n     * Select the entire input value on click\n     */\n    handleLinkInputClick(event) {\n      // See this stackoverflow post:\n      // https://stackoverflow.com/questions/4067469/selecting-all-text-in-html-text-input-when-clicked\n      const input = event.currentTarget;\n      input.setSelectionRange(0, input.value.length);\n    },\n    async clickSubmitButton() {\n      this.dataLoaded = false;\n      const params = {\n        team_id: this.currentTeamId,\n        project_submitted: true,\n      };\n      await this.performPostRequest(this.getEnvVariable('BACKEND'), 'teams/submission', params);\n      await this.getTeam();\n      this.dataLoaded = true;\n      this.$bvModal.show('projectSubmissionModal');\n    },\n    clickReadyButton() {\n      this.readyButtonClicked = true;\n    },\n    toggleCheckboxChecked(id) {\n      const item = this.checklistItems.find((j) => id === j.id);\n      item.checked = !item.checked;\n      if (item.checked) {\n        this.checklistCounter += 1;\n      } else {\n        this.checklistCounter -= 1;\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.page {\n  box-sizing: border-box;\n  width: 100%;\n  padding: 2rem 4rem;\n  display: grid;\n  gap: 2rem;\n  grid-template-rows: 440px 440px;\n  grid-template-areas:\n    \"team project\"\n    \"team other\";\n  place-items: stretch;\n}\n\n.team {\n  grid-area: team;\n  min-height: 0;\n}\n\n.copy-button {\n  z-index: 0;\n  margin: 0;\n}\n\n.create-team-container {\n  display: inline-block;\n}\n\ndiv ::v-deep #linkCopyToast {\n  margin-top: 75px;\n}\n\n.filler {\n  cursor: text !important;\n}\n\n.content-container {\n  padding: 1rem 0;\n  text-align: center;\n}\n\n.checklist-item {\n  float: left;\n}\n\n.checklist-body {\n  width: 100%;\n  display: inline-block;\n  text-align: left;\n}\n</style>\n"]}]}