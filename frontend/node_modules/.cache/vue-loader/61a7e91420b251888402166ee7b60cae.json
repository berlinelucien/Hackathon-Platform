{"remainingRequest":"/Users/berlin/Documents/platform/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/berlin/Documents/platform/frontend/src/components/LeaderboardBars.vue?vue&type=style&index=0&id=5c6cef5d&scoped=true&lang=css&","dependencies":[{"path":"/Users/berlin/Documents/platform/frontend/src/components/LeaderboardBars.vue","mtime":1634085832806},{"path":"/Users/berlin/Documents/platform/frontend/node_modules/css-loader/dist/cjs.js","mtime":1634257405846},{"path":"/Users/berlin/Documents/platform/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1634257408068},{"path":"/Users/berlin/Documents/platform/frontend/node_modules/postcss-loader/src/index.js","mtime":1634257406599},{"path":"/Users/berlin/Documents/platform/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1634257404436},{"path":"/Users/berlin/Documents/platform/frontend/node_modules/vue-loader/lib/index.js","mtime":1634257407250}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCiNjYW1wZmlyZS1nYW1lcyB7CiAgcGFkZGluZzogMDsKfQoKI2NhbXBmaXJlLWdhbWVzLXJvdyB7CiAgbWFyZ2luOiAwJTsKfQoKLnBvaW50cy1iYXIgewogIGFsaWduLWl0ZW1zOiBjZW50ZXIgIWltcG9ydGFudDsKICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlciAhaW1wb3J0YW50OwogIGhlaWdodDogNnJlbTsKICBtYXJnaW46IDFyZW07CiAgYm9yZGVyLXJhZGl1czogdmFyKC0tYm9yZGVyLXJhZGl1cyk7CiAgZm9udC1zaXplOiAxNnB0Owp9CgouYmFyLWNvbCB7CiAgZGlzcGxheTogZmxleDsKICBoZWlnaHQ6IDVyZW07CiAgYWxpZ24taXRlbXM6IGNlbnRlciAhaW1wb3J0YW50Owp9Cgp1bCB7CiAgdGV4dC1hbGlnbjogbGVmdDsKfQo="},{"version":3,"sources":["LeaderboardBars.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+EA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"LeaderboardBars.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <!-- info -->\n  <b-container id=\"campfire-games\">\n    <div\n      v-for=\"team in this.campfireGamesData\"\n      :text=\"team.teamName\"\n      :key=\"team.teamName\"\n      :style=\"{color: team.textColor}\"\n    >\n\n        <div class=\"row points-bar\" :style=\"{backgroundColor: team.backgroundColor, width: team.width}\">\n          <div class=\"col-9 bar-col\" style=\"text-align: left\">\n            <strong>{{team.teamName}}</strong>: {{team.points}} points\n          </div>\n          <div class=\"col-3 bar-col\" style=\"justify-content: right\">\n            <img class=\"h-100 d-inline-block\" :src=\"require('../assets/campfire_games/'+team.imgLink)\" alt=\"campfire_games_logo\">\n          </div>\n        </div>\n    </div>\n  </b-container>\n\n</template>\n\n<script>\nimport generalMixin from '../mixins/general';\n\nexport default {\n  name: 'Leaderboard',\n  mixins: [generalMixin],\n  data() {\n    return {\n      campfireGamesData: {\n        red: {\n          teamName: 'Red Team',\n          points: 0,\n          backgroundColor: '#EBC0C0',\n          textColor: '#ff3f46',\n        },\n        blue: {\n          teamName: 'Blue Team',\n          points: 0,\n          backgroundColor: '#C2D5EB',\n          textColor: '#2875cc',\n        },\n        green: {\n          teamName: 'Green Team',\n          points: 0,\n          backgroundColor: '#A7D3C0',\n          textColor: '#009050',\n        },\n      },\n    };\n  },\n  methods: {\n    async getPoints() {\n      const campfirePoints = await this.performGetRequest(this.getEnvVariable('BACKEND'), 'get_point_totals', {});\n      const minWidth = 40;\n      let totalPoints = 0;\n      Object.keys(campfirePoints).forEach((teamName) => {\n        this.campfireGamesData[teamName].points = campfirePoints[teamName];\n        totalPoints += campfirePoints[teamName];\n      });\n\n      Object.keys(campfirePoints).forEach((teamName) => {\n        this.campfireGamesData[teamName].width = `${minWidth + ((campfirePoints[teamName] / totalPoints) * (90 - minWidth))}%`;\n      });\n    },\n  },\n  async mounted() {\n    await this.getPoints();\n  },\n  async created() {\n    setInterval(() => { this.getPoints(); }, 60000);\n  },\n};\n</script>\n\n<style scoped>\n\n#campfire-games {\n  padding: 0;\n}\n\n#campfire-games-row {\n  margin: 0%;\n}\n\n.points-bar {\n  align-items: center !important;\n  justify-content: center !important;\n  height: 6rem;\n  margin: 1rem;\n  border-radius: var(--border-radius);\n  font-size: 16pt;\n}\n\n.bar-col {\n  display: flex;\n  height: 5rem;\n  align-items: center !important;\n}\n\nul {\n  text-align: left;\n}\n</style>\n"]}]}