{"remainingRequest":"/Users/berlin/Documents/platform/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/berlin/Documents/platform/frontend/src/views/ViewProfiles.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/berlin/Documents/platform/frontend/src/views/ViewProfiles.vue","mtime":1634085832816},{"path":"/Users/berlin/Documents/platform/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1634257404436},{"path":"/Users/berlin/Documents/platform/frontend/node_modules/babel-loader/lib/index.js","mtime":1634257405404},{"path":"/Users/berlin/Documents/platform/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1634257404436},{"path":"/Users/berlin/Documents/platform/frontend/node_modules/vue-loader/lib/index.js","mtime":1634257407250}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBMb2FkaW5nU3Bpbm5lciBmcm9tICdAL2NvbXBvbmVudHMvTG9hZGluZ1NwaW5uZXIudnVlJzsKaW1wb3J0IGdlbmVyYWxNaXhpbiBmcm9tICcuLi9taXhpbnMvZ2VuZXJhbCc7CmltcG9ydCBCdXR0b24gZnJvbSAnLi4vY29tcG9uZW50cy9CdXR0b24udnVlJzsKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnVmlld1Byb2ZpbGVzJywKICBtaXhpbnM6IFtnZW5lcmFsTWl4aW5dLAogIGNvbXBvbmVudHM6IHsKICAgIEJ1dHRvbiwKICAgIExvYWRpbmdTcGlubmVyLAogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHByb2ZpbGVzOiBbXSwKICAgICAgZmlsdGVyZWRQcm9maWxlczogW10sCiAgICAgIGRhdGFMb2FkZWQ6IGZhbHNlLAogICAgfTsKICB9LAogIGFzeW5jIG1vdW50ZWQoKSB7CiAgICBjb25zdCBwcm9maWxlcyA9IGF3YWl0IHRoaXMucGVyZm9ybUdldFJlcXVlc3QodGhpcy5nZXRFbnZWYXJpYWJsZSgnQkFDS0VORCcpLCAndXNlcnMvbGlzdCcsIHt9KTsKICAgIHRoaXMucHJvZmlsZXMgPSBwcm9maWxlcy5JdGVtcwogICAgICAuZmlsdGVyKChwcm9maWxlKSA9PiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocHJvZmlsZSwgJ2Z1bGxfbmFtZScpKQogICAgICAuc29ydCh0aGlzLmNvbXBhcmVQcm9maWxlc0FscGhhYmV0aWNhbGx5KTsKCiAgICAvLyBDcmVhdGUgYSBzZXQgb2YgZmF2b3JpdGUgcHJvZmlsZSBpZHMKICAgIGNvbnN0IHBhcmFtcyA9IHsgc3BvbnNvcl9pZDogdGhpcy5nZXRVc2VySWQoKSB9OwogICAgY29uc3QgcmVzcCA9IGF3YWl0IHRoaXMucGVyZm9ybUdldFJlcXVlc3QodGhpcy5nZXRFbnZWYXJpYWJsZSgnQkFDS0VORCcpLCAncHJvamVjdHMvZmF2b3JpdGVfaGFja2VyJywgcGFyYW1zKTsKICAgIGNvbnN0IGlkcyA9IHJlc3AubWFwKChmYXZvcml0ZWRVc2VyKSA9PiBmYXZvcml0ZWRVc2VyLnVzZXJfaWQpOwogICAgY29uc3QgZmF2b3JpdGVQcm9maWxlSWRzID0gbmV3IFNldChpZHMpOwoKICAgIC8vIEFkZCBhIGZpZWxkIG9uIHRoZSBwcm9maWxlcyB0byBpbmRpY2F0ZSBpZiB0aGV5J3JlIGZhdm9yaXRlZAogICAgdGhpcy5wcm9maWxlcyA9IHRoaXMucHJvZmlsZXMubWFwKChwcm9maWxlKSA9PiAoewogICAgICAuLi5wcm9maWxlLAogICAgICBpc0Zhdm9yaXRlZDogZmF2b3JpdGVQcm9maWxlSWRzLmhhcyhwcm9maWxlLmlkKSwKICAgIH0pKTsKCiAgICB0aGlzLmZpbHRlcmVkUHJvZmlsZXMgPSB0aGlzLnByb2ZpbGVzOwogICAgdGhpcy5zb3J0QnlGYXZvcml0ZXMoKTsKICAgIHRoaXMuZGF0YUxvYWRlZCA9IHRydWU7CiAgfSwKICBtZXRob2RzOiB7CiAgICBmaWx0ZXJQcm9maWxlcyhldmVudCkgewogICAgICBjb25zdCBxdWVyeSA9IGV2ZW50LnRhcmdldC52YWx1ZS50b0xvd2VyQ2FzZSgpOwogICAgICB0aGlzLmZpbHRlcmVkUHJvZmlsZXMgPSB0aGlzLnByb2ZpbGVzLmZpbHRlcigocHJvZmlsZSkgPT4gcHJvZmlsZS5mdWxsX25hbWUudG9Mb3dlckNhc2UoKS5pbmNsdWRlcyhxdWVyeSkpOwogICAgfSwKICAgIGFzeW5jIHRvZ2dsZVByb2ZpbGVJbkxpc3QodGFyZ2V0UHJvZmlsZSkgewogICAgICAvLyBGbGlwIHRhcmdldCdzIGlzRmF2b3JpdGVkIHN0YXRlIGluc3RhbnRseQogICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcGFyYW0tcmVhc3NpZ24KICAgICAgdGFyZ2V0UHJvZmlsZS5pc0Zhdm9yaXRlZCA9ICF0YXJnZXRQcm9maWxlLmlzRmF2b3JpdGVkOwoKICAgICAgY29uc3QgcGFyYW1zID0gewogICAgICAgIHNwb25zb3JfaWQ6IHRoaXMuZ2V0VXNlcklkKCksCiAgICAgICAgdXNlcl9pZDogdGFyZ2V0UHJvZmlsZS5pZCwKICAgICAgfTsKCiAgICAgIGNvbnN0IHJvdXRlID0gdGFyZ2V0UHJvZmlsZS5pc0Zhdm9yaXRlZCA/ICdwcm9qZWN0cy9mYXZvcml0ZV9oYWNrZXInIDogJ3Byb2plY3RzL2Zhdm9yaXRlX2hhY2tlci9kZWxldGUnOwogICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IHRoaXMucGVyZm9ybVBvc3RSZXF1ZXN0KHRoaXMuZ2V0RW52VmFyaWFibGUoJ0JBQ0tFTkQnKSwgcm91dGUsIHBhcmFtcyk7CiAgICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlKTsKCiAgICAgIGlmIChyZXNwb25zZSAhPT0gbnVsbCkgewogICAgICAgIC8vIEZsaXAgc3RhciB0eXBlIG9uIHN1Y2Nlc3MKICAgICAgICB0aGlzLiRmb3JjZVVwZGF0ZSgpOwogICAgICB9IGVsc2UgewogICAgICAgIC8vIE90aGVyd2lzZSwgcm9sbCBiYWNrIHRoZSBjaGFuZ2VzCiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXBhcmFtLXJlYXNzaWduCiAgICAgICAgdGFyZ2V0UHJvZmlsZS5pc0Zhdm9yaXRlZCA9ICF0YXJnZXRQcm9maWxlLmlzRmF2b3JpdGVkOwogICAgICB9CiAgICB9LAogICAgc29ydEJ5RmF2b3JpdGVzKCkgewogICAgICAvLyBTb3J0IGZpbHRlcmVkUHJvZmlsZXMgdG8gcHV0IGZhdm9yaXRlZCBoYWNrZXJzIGZpcnN0CiAgICAgIC8vIHRoZW4gc29ydCBhbHBoYWJldGljYWxseQoKICAgICAgdGhpcy5maWx0ZXJlZFByb2ZpbGVzCiAgICAgICAgLnNvcnQoKHByb2ZpbGUxLCBwcm9maWxlMikgPT4gewogICAgICAgICAgaWYgKHByb2ZpbGUxLmlzRmF2b3JpdGVkID09PSBwcm9maWxlMi5pc0Zhdm9yaXRlZCkgewogICAgICAgICAgICByZXR1cm4gdGhpcy5jb21wYXJlUHJvZmlsZXNBbHBoYWJldGljYWxseShwcm9maWxlMSwgcHJvZmlsZTIpOwogICAgICAgICAgfQogICAgICAgICAgaWYgKHByb2ZpbGUxLmlzRmF2b3JpdGVkKSB7CiAgICAgICAgICAgIHJldHVybiAtMTsKICAgICAgICAgIH0KICAgICAgICAgIHJldHVybiAxOwogICAgICAgIH0pOwogICAgfSwKICAgIGNvbXBhcmVQcm9maWxlc0FscGhhYmV0aWNhbGx5KHByb2ZpbGUxLCBwcm9maWxlMikgewogICAgICByZXR1cm4gcHJvZmlsZTEuZnVsbF9uYW1lLmxvY2FsZUNvbXBhcmUocHJvZmlsZTIuZnVsbF9uYW1lKTsKICAgIH0sCiAgICBnZXRGYXZvcml0ZUljb25Gb3IocHJvZmlsZSkgewogICAgICBjb25zdCBpbWFnZXMgPSByZXF1aXJlLmNvbnRleHQoJy4uL2Fzc2V0cycsIGZhbHNlLCAvXC5zdmd8cG5nJC8pOwogICAgICAvLyBUT0RPIGNoYW5nZSB0byB0ZWNobmljYSBjb2xvcnMKICAgICAgcmV0dXJuIGltYWdlcyhgLi8keyhwcm9maWxlLmlzRmF2b3JpdGVkID8gJ3N0YXJfb3JhbmdlX2ZpbGxlZC5zdmcnIDogJ3N0YXJfb3JhbmdlX2VtcHR5LnN2ZycpfWApOwogICAgfSwKICB9LAp9Owo="},{"version":3,"sources":["ViewProfiles.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyCA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ViewProfiles.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"page-container\">\n    <h2 class=\"page-header mb-0\">Hacker Profiles</h2>\n    <p class=\"mb-5\">Click on a hacker's card to view their profile!</p>\n    <b-container v-if=\"dataLoaded\">\n      <div class=\"mb-3\">\n        <label\n          class=\"mr-2\"\n          for=\"hacker-searchbar\"\n        ><strong>Hacker Search:</strong></label>\n        <input\n          id=\"hacker-searchbar\"\n          type=\"text\"\n          placeholder=\"Enter a name here\"\n          class=\"form-control d-inline w-auto\"\n          @input=\"filterProfiles\"\n        />\n      </div>\n      <div class=\"profiles-container pb-5\">\n        <div\n          v-for=\"profile in filteredProfiles\"\n          class=\"card hacker-profile-card\"\n          :key=\"profile.id\"\n        >\n          <div class=\"schedule-content-item-star\">\n            <img\n              :src=\"getFavoriteIconFor(profile)\"\n              @click.stop=\"toggleProfileInList(profile)\"\n              style=\"width: 19px; height: 18px\"\n            />\n          </div>\n          <span style=\"margin-right: .5rem;\">{{ profile.full_name }}</span>\n          <router-link :to=\"`/profile?id=${profile.id}`\"><Button size=\"sm\">View Profile</Button></router-link>\n        </div>\n      </div>\n    </b-container>\n    <LoadingSpinner v-else />\n  </div>\n</template>\n\n<script>\nimport LoadingSpinner from '@/components/LoadingSpinner.vue';\nimport generalMixin from '../mixins/general';\nimport Button from '../components/Button.vue';\n\nexport default {\n  name: 'ViewProfiles',\n  mixins: [generalMixin],\n  components: {\n    Button,\n    LoadingSpinner,\n  },\n  data() {\n    return {\n      profiles: [],\n      filteredProfiles: [],\n      dataLoaded: false,\n    };\n  },\n  async mounted() {\n    const profiles = await this.performGetRequest(this.getEnvVariable('BACKEND'), 'users/list', {});\n    this.profiles = profiles.Items\n      .filter((profile) => Object.prototype.hasOwnProperty.call(profile, 'full_name'))\n      .sort(this.compareProfilesAlphabetically);\n\n    // Create a set of favorite profile ids\n    const params = { sponsor_id: this.getUserId() };\n    const resp = await this.performGetRequest(this.getEnvVariable('BACKEND'), 'projects/favorite_hacker', params);\n    const ids = resp.map((favoritedUser) => favoritedUser.user_id);\n    const favoriteProfileIds = new Set(ids);\n\n    // Add a field on the profiles to indicate if they're favorited\n    this.profiles = this.profiles.map((profile) => ({\n      ...profile,\n      isFavorited: favoriteProfileIds.has(profile.id),\n    }));\n\n    this.filteredProfiles = this.profiles;\n    this.sortByFavorites();\n    this.dataLoaded = true;\n  },\n  methods: {\n    filterProfiles(event) {\n      const query = event.target.value.toLowerCase();\n      this.filteredProfiles = this.profiles.filter((profile) => profile.full_name.toLowerCase().includes(query));\n    },\n    async toggleProfileInList(targetProfile) {\n      // Flip target's isFavorited state instantly\n      // eslint-disable-next-line no-param-reassign\n      targetProfile.isFavorited = !targetProfile.isFavorited;\n\n      const params = {\n        sponsor_id: this.getUserId(),\n        user_id: targetProfile.id,\n      };\n\n      const route = targetProfile.isFavorited ? 'projects/favorite_hacker' : 'projects/favorite_hacker/delete';\n      const response = await this.performPostRequest(this.getEnvVariable('BACKEND'), route, params);\n      console.log(response);\n\n      if (response !== null) {\n        // Flip star type on success\n        this.$forceUpdate();\n      } else {\n        // Otherwise, roll back the changes\n        // eslint-disable-next-line no-param-reassign\n        targetProfile.isFavorited = !targetProfile.isFavorited;\n      }\n    },\n    sortByFavorites() {\n      // Sort filteredProfiles to put favorited hackers first\n      // then sort alphabetically\n\n      this.filteredProfiles\n        .sort((profile1, profile2) => {\n          if (profile1.isFavorited === profile2.isFavorited) {\n            return this.compareProfilesAlphabetically(profile1, profile2);\n          }\n          if (profile1.isFavorited) {\n            return -1;\n          }\n          return 1;\n        });\n    },\n    compareProfilesAlphabetically(profile1, profile2) {\n      return profile1.full_name.localeCompare(profile2.full_name);\n    },\n    getFavoriteIconFor(profile) {\n      const images = require.context('../assets', false, /\\.svg|png$/);\n      // TODO change to technica colors\n      return images(`./${(profile.isFavorited ? 'star_orange_filled.svg' : 'star_orange_empty.svg')}`);\n    },\n  },\n};\n</script>\n\n<style scoped>\n.profiles-container {\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n  flex-direction: row;\n  flex-wrap: wrap;\n}\n\n.card.hacker-profile-card {\n  width: 30%;\n  display: flex;\n  position: relative;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  box-shadow: 0px 2px 2px var(--color-shadow);\n  margin: 0.5rem;\n  padding: 0.5rem;\n}\n\n.schedule-content-item-star {\n  position: absolute;\n  top: 0rem;\n  left: 0.5rem;\n}\n</style>\n"]}]}