{"remainingRequest":"/Users/berlin/Documents/platform/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/berlin/Documents/platform/frontend/src/views/Project.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/berlin/Documents/platform/frontend/src/views/Project.vue","mtime":1634690659399},{"path":"/Users/berlin/Documents/platform/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1634257404436},{"path":"/Users/berlin/Documents/platform/frontend/node_modules/babel-loader/lib/index.js","mtime":1634257405404},{"path":"/Users/berlin/Documents/platform/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1634257404436},{"path":"/Users/berlin/Documents/platform/frontend/node_modules/vue-loader/lib/index.js","mtime":1634257407250}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBCdXR0b24gZnJvbSAnQC9jb21wb25lbnRzL0J1dHRvbi52dWUnOwppbXBvcnQgTG9hZGluZ1NwaW5uZXIgZnJvbSAnQC9jb21wb25lbnRzL0xvYWRpbmdTcGlubmVyLnZ1ZSc7CmltcG9ydCBDaGVja2xpc3RJdGVtIGZyb20gJ0AvY29tcG9uZW50cy9DaGVja2xpc3RJdGVtLnZ1ZSc7CmltcG9ydCBFYXN0ZXJFZ2cgZnJvbSAnQC9jb21wb25lbnRzL0Vhc3RlckVnZy52dWUnOwppbXBvcnQgZ2VuZXJhbE1peGluIGZyb20gJy4uL21peGlucy9nZW5lcmFsJzsKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnUHJvamVjdCcsCiAgbWl4aW5zOiBbZ2VuZXJhbE1peGluXSwKICBjb21wb25lbnRzOiB7CiAgICBCdXR0b24sCiAgICBDaGVja2xpc3RJdGVtLAogICAgTG9hZGluZ1NwaW5uZXIsCiAgICBFYXN0ZXJFZ2csCiAgfSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgcHJvamVjdEhhc0FscmVhZHlCZWVuU3VibWl0dGVkOiBmYWxzZSwKICAgICAgcmVhZHlCdXR0b25DbGlja2VkOiBmYWxzZSwKICAgICAgZGF0YUxvYWRlZDogZmFsc2UsCiAgICAgIHJlYWR5QnV0dG9uVGV4dDogIkknbSBSZWFkeSB0byBTdWJtaXQhIiwKICAgICAgcmVhZHlCdXR0b25EaXNhYmxlZDogZmFsc2UsCiAgICAgIGNoZWNrbGlzdEl0ZW1zOiBbCiAgICAgICAgewogICAgICAgICAgdGl0bGU6ICdjb21wbGV0ZWQgbXkgcHJvamVjdCBhbmQgYW0gcmVhZHkgdG8gc3VibWl0JywKICAgICAgICAgIGxpbms6ICcnLAogICAgICAgICAgbGlua1RleHQ6ICcnLAogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgdGl0bGU6ICdzdWJtaXR0ZWQgbXkgaGFjayBvbiBEZXZwb3N0OicsCiAgICAgICAgICBsaW5rOiB0aGlzLmdldEVudlZhcmlhYmxlKCdERVZQT1NUX0xJTksnKSwKICAgICAgICAgIGxpbmtUZXh0OiAnVGVjaG5pY2EgRGV2cG9zdCcsCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICB0aXRsZTogJ3N1Ym1pdHRlZCBteSBoYWNrIHRvIFRlY2huaWNhIGJlbG93OicsCiAgICAgICAgICBsaW5rOiAnJywKICAgICAgICB9LAogICAgICBdLAogICAgICB0ZWFtTmFtZTogJycsCiAgICAgIGRldkxpbms6ICcnLAogICAgICBjdXJyZW50VGVhbUlkOiBudWxsLAogICAgICBjaGVja2xpc3RDb3VudGVyOiAwLAogICAgfTsKICB9LAogIGFzeW5jIGNyZWF0ZWQoKSB7CiAgICBhd2FpdCB0aGlzLmdldFRlYW0oKTsKICAgIHRoaXMuZGF0YUxvYWRlZCA9IHRydWU7CiAgfSwKICBtZXRob2RzOiB7CiAgICBjbG9zZU1vZGFsKCkgewogICAgICB0aGlzLiRidk1vZGFsLmhpZGUoJ3Byb2plY3RTdWJtaXNzaW9uTW9kYWwnKTsKICAgIH0sCiAgICBjcmVhdGVUZWFtKCkgewogICAgICB0aGlzLiRyb3V0ZXIucHVzaCgnVGVhbScpOwogICAgfSwKICAgIGFzeW5jIGNsaWNrU3VibWl0QnV0dG9uKCkgewogICAgICB0aGlzLmRhdGFMb2FkZWQgPSBmYWxzZTsKICAgICAgY29uc3QgcGFyYW1zID0gewogICAgICAgIHRlYW1faWQ6IHRoaXMuY3VycmVudFRlYW1JZCwKICAgICAgICBwcm9qZWN0X3N1Ym1pdHRlZDogdHJ1ZSwKICAgICAgfTsKICAgICAgYXdhaXQgdGhpcy5wZXJmb3JtUG9zdFJlcXVlc3QodGhpcy5nZXRFbnZWYXJpYWJsZSgnQkFDS0VORCcpLCAndGVhbXMvc3VibWlzc2lvbicsIHBhcmFtcyk7CiAgICAgIGF3YWl0IHRoaXMuZ2V0VGVhbSgpOwogICAgICB0aGlzLmRhdGFMb2FkZWQgPSB0cnVlOwogICAgICB0aGlzLiRidk1vZGFsLnNob3coJ3Byb2plY3RTdWJtaXNzaW9uTW9kYWwnKTsKICAgIH0sCiAgICBjbGlja1JlYWR5QnV0dG9uKCkgewogICAgICB0aGlzLnJlYWR5QnV0dG9uQ2xpY2tlZCA9IHRydWU7CiAgICB9LAogICAgYXN5bmMgZ2V0VGVhbSgpIHsKICAgICAgY29uc3QgdGVhbVBhcmFtcyA9IHsKICAgICAgICB1c2VyX2lkOiB0aGlzLmdldFVzZXJJZCgpLAogICAgICB9OwogICAgICBjb25zdCB0ZWFtID0gYXdhaXQgdGhpcy5wZXJmb3JtR2V0UmVxdWVzdCh0aGlzLmdldEVudlZhcmlhYmxlKCdCQUNLRU5EJyksICd0ZWFtcy9tZW1iZXJzaGlwJywgdGVhbVBhcmFtcyk7CiAgICAgIGlmICh0ZWFtWzBdKSB7CiAgICAgICAgdGhpcy5oYXNUZWFtID0gdHJ1ZTsKICAgICAgICBjb25zdCBwYXJhbXMgPSB7CiAgICAgICAgICB0ZWFtX2lkOiB0ZWFtWzBdLnRlYW1faWQsCiAgICAgICAgfTsKICAgICAgICAvLyBjaGVjayBzdWJtaXNzaW9uIHN0YXR1cyBvZiBwcm9qZWN0CiAgICAgICAgY29uc3Qgc3RhdHVzID0gYXdhaXQgdGhpcy5wZXJmb3JtR2V0UmVxdWVzdCh0aGlzLmdldEVudlZhcmlhYmxlKCdCQUNLRU5EJyksICd0ZWFtcy9zdWJtaXNzaW9uJywgcGFyYW1zKTsKICAgICAgICB0aGlzLnByb2plY3RIYXNBbHJlYWR5QmVlblN1Ym1pdHRlZCA9IHN0YXR1c1swXS5wcm9qZWN0X3N1Ym1pdHRlZDsKICAgICAgICBpZiAodGhpcy5wcm9qZWN0SGFzQWxyZWFkeUJlZW5TdWJtaXR0ZWQpIHsKICAgICAgICAgIHRoaXMucmVhZHlCdXR0b25UZXh0ID0gJ1Byb2plY3QgaGFzIGJlZW4gc3VibWl0dGVkJzsKICAgICAgICAgIHRoaXMucmVhZHlCdXR0b25EaXNhYmxlZCA9IHRydWU7CiAgICAgICAgfQogICAgICAgIC8vIGdldCBjaGVja2xpc3QgaXRlbXMgZm9yIHRlYW0KICAgICAgICBjb25zdCBjaGVja2xpc3QgPSBhd2FpdCB0aGlzLnBlcmZvcm1HZXRSZXF1ZXN0KHRoaXMuZ2V0RW52VmFyaWFibGUoJ0JBQ0tFTkQnKSwgJ3Byb2plY3RzL3N1Ym1pc3Npb24vY2hlY2tsaXN0JywgcGFyYW1zKTsKICAgICAgICBPYmplY3QudmFsdWVzKGNoZWNrbGlzdCkuZm9yRWFjaCgoaykgPT4gewogICAgICAgICAgY29uc3QgaXRlbSA9IHRoaXMuY2hlY2tsaXN0SXRlbXMuZmluZCgoaikgPT4gay5jaGVja2xpc3RfaXRlbV9pZCA9PT0gai50aXRsZSk7CgogICAgICAgICAgaWYgKGl0ZW0pIHsKICAgICAgICAgICAgaXRlbS5pZCA9IGsuaWQ7CiAgICAgICAgICAgIGl0ZW0uY2hlY2tlZCA9IGsuaXNfY2hlY2tlZDsKICAgICAgICAgICAgaWYgKGl0ZW0uY2hlY2tlZCkgewogICAgICAgICAgICAgIHRoaXMucmVhZHlCdXR0b25DbGlja2VkID0gdHJ1ZTsKICAgICAgICAgICAgICB0aGlzLmNoZWNrbGlzdENvdW50ZXIgKz0gMTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0pOwogICAgICAgIHRoaXMuY3VycmVudFRlYW1JZCA9IHRlYW1bMF0udGVhbV9pZDsKICAgICAgfQogICAgfSwKICAgIHRvZ2dsZUNoZWNrYm94Q2hlY2tlZChpZCkgewogICAgICBjb25zdCBpdGVtID0gdGhpcy5jaGVja2xpc3RJdGVtcy5maW5kKChqKSA9PiBpZCA9PT0gai5pZCk7CiAgICAgIGl0ZW0uY2hlY2tlZCA9ICFpdGVtLmNoZWNrZWQ7CiAgICAgIGlmIChpdGVtLmNoZWNrZWQpIHsKICAgICAgICB0aGlzLmNoZWNrbGlzdENvdW50ZXIgKz0gMTsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLmNoZWNrbGlzdENvdW50ZXIgLT0gMTsKICAgICAgfQogICAgfSwKICB9LAogIGNvbXB1dGVkOiB7CiAgICBjaGVja2xpc3REaXNhYmxlZCgpIHsKICAgICAgcmV0dXJuICh0aGlzLmRldkxpbmsgPT09ICcnIHx8IHRoaXMudGVhbU5hbWUgPT09ICcnKSB8fCB0aGlzLmNoZWNrbGlzdENvdW50ZXIgIT09IHRoaXMuY2hlY2tsaXN0SXRlbXMubGVuZ3RoOwogICAgfSwKICB9LAp9Owo="},{"version":3,"sources":["Project.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8HA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Project.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div>\n    <h2 class=\"page-header\">My Project</h2>\n    <EasterEgg\n      :index=4\n      :hint=\"'You’re too good at this! Submit your project here whenever you’ve completed it. You’ve completed the Technica 2021 Scavenger Hunt!'\"\n      :fileName=\"'scavenger-hunt/5.png'\"\n    />\n    <div class=\"container mx-auto\">\n      <div v-if=\"dataLoaded && hasTeam\">\n        <div\n          v-if=\"projectHasAlreadyBeenSubmitted || !readyButtonClicked\"\n          class=\"row\"\n        >\n          <div class=\"col-md-1\"></div>\n          <div class=\"col-md-10\">\n            <div\n              class=\"card\"\n              style=\"margin-bottom: 2rem;\"\n            >\n              <div class=\"card-body\">\n                <p>\n                  If you are ready to submit your Technica Hack, please click on the button below! <b>Only one hacker needs to submit per team.</b>\n                </p>\n                <p>\n                  If the button is grayed out, another member of your team has already submitted your project!\n                </p>\n              </div>\n            </div>\n            <Button\n              @click=\"clickReadyButton\"\n              :disabled=\"this.readyButtonDisabled\"\n            >\n              {{this.readyButtonText}}\n            </Button>\n          </div>\n        </div>\n\n        <div v-else>\n          <p>In order to submit your project and get credit for your hack, you'll need to complete a few steps. First, submit your hack on Devpost, then submit your hack using the fields below. Click \"Submit My Project\" when you're done. <b>If you need to edit your submission after submitting, please reach out to the Technica organizing team.</b></p>\n          <h4>I have...</h4>\n          <div class=\"content-container row-xl-6\">\n            <div class=\"checklist-body\">\n              <div\n                v-for=\"checklistItem in checklistItems\"\n                :key=\"checklistItem.title\"\n                class=\"checklist-item\"\n              >\n                <checklist-item\n                  :isChecked=\"checklistItem.checked\"\n                  :id=\"checklistItem.id\"\n                  @click=\"toggleCheckboxChecked\"\n                >\n                  <template v-slot:text>\n                    {{ checklistItem.title }} <a\n                      :href=\"checklistItem.link\"\n                      target=\"_blank\"\n                    >{{ checklistItem.linkText }}</a>\n                  </template>\n                </checklist-item>\n              </div>\n            </div>\n            <div>\n              <form @submit.prevent=\"sendMagicLink\">\n                <div class=\"form-group mx-auto\">\n                  <input\n                    type=\"text\"\n                    class=\"form-control col-xl-4 mx-auto project-form-input\"\n                    id=\"nameInput\"\n                    placeholder=\"Team Name\"\n                    v-model=\"teamName\"\n                  >\n                  <input\n                    type=\"text\"\n                    class=\"form-control col-xl-4 mx-auto project-form-input\"\n                    id=\"linkInput\"\n                    placeholder=\"Devpost Link\"\n                    v-model=\"devLink\"\n                  >\n                  <!-- Prize categories will be implemented in a future ticket -->\n                  <!-- <input type=\"text\" class=\"form-control col-xl-4 mx-auto project-form-input\" id=\"emailInput\" placeholder=\"Prize Categories\" v-model=\"teamName\"> -->\n                </div>\n              </form>\n            </div>\n          </div>\n          <Button\n            :disabled=\"checklistDisabled\"\n            @click=\"clickSubmitButton\"\n          >\n            Submit My Project\n          </Button>\n        </div>\n      </div>\n      <div\n        v-if=\"dataLoaded && !hasTeam\"\n        class=\"display-container\"\n        style=\"flex-direction: column; justify-content: center;\"\n      >\n        <div style=\"margin-bottom: 1rem;\">You must create or join a team in order to submit your project, even if you are a hacker working alone.</div>\n        <Button\n          @click=\"createTeam()\"\n          class=\"create-team-button\"\n        >Create or Join a Team</Button>\n      </div>\n      <LoadingSpinner v-if=\"!dataLoaded\" />\n      <b-modal\n        id=\"projectSubmissionModal\"\n        title=\"Congratulations!\"\n        size=\"lg\"\n        centered\n      >\n        <p>Great work! We've received your project submission.</p>\n        <p>If you have any questions, don't hesitate to reach out to the Technica organizing team.</p>\n        <template v-slot:modal-footer>\n          <Button\n            @click=\"closeModal()\"\n            size=\"sm\"\n          >Close</Button>\n        </template>\n      </b-modal>\n\n    </div>\n  </div>\n</template>\n\n<script>\nimport Button from '@/components/Button.vue';\nimport LoadingSpinner from '@/components/LoadingSpinner.vue';\nimport ChecklistItem from '@/components/ChecklistItem.vue';\nimport EasterEgg from '@/components/EasterEgg.vue';\nimport generalMixin from '../mixins/general';\n\nexport default {\n  name: 'Project',\n  mixins: [generalMixin],\n  components: {\n    Button,\n    ChecklistItem,\n    LoadingSpinner,\n    EasterEgg,\n  },\n  data() {\n    return {\n      projectHasAlreadyBeenSubmitted: false,\n      readyButtonClicked: false,\n      dataLoaded: false,\n      readyButtonText: \"I'm Ready to Submit!\",\n      readyButtonDisabled: false,\n      checklistItems: [\n        {\n          title: 'completed my project and am ready to submit',\n          link: '',\n          linkText: '',\n        },\n        {\n          title: 'submitted my hack on Devpost:',\n          link: this.getEnvVariable('DEVPOST_LINK'),\n          linkText: 'Technica Devpost',\n        },\n        {\n          title: 'submitted my hack to Technica below:',\n          link: '',\n        },\n      ],\n      teamName: '',\n      devLink: '',\n      currentTeamId: null,\n      checklistCounter: 0,\n    };\n  },\n  async created() {\n    await this.getTeam();\n    this.dataLoaded = true;\n  },\n  methods: {\n    closeModal() {\n      this.$bvModal.hide('projectSubmissionModal');\n    },\n    createTeam() {\n      this.$router.push('Team');\n    },\n    async clickSubmitButton() {\n      this.dataLoaded = false;\n      const params = {\n        team_id: this.currentTeamId,\n        project_submitted: true,\n      };\n      await this.performPostRequest(this.getEnvVariable('BACKEND'), 'teams/submission', params);\n      await this.getTeam();\n      this.dataLoaded = true;\n      this.$bvModal.show('projectSubmissionModal');\n    },\n    clickReadyButton() {\n      this.readyButtonClicked = true;\n    },\n    async getTeam() {\n      const teamParams = {\n        user_id: this.getUserId(),\n      };\n      const team = await this.performGetRequest(this.getEnvVariable('BACKEND'), 'teams/membership', teamParams);\n      if (team[0]) {\n        this.hasTeam = true;\n        const params = {\n          team_id: team[0].team_id,\n        };\n        // check submission status of project\n        const status = await this.performGetRequest(this.getEnvVariable('BACKEND'), 'teams/submission', params);\n        this.projectHasAlreadyBeenSubmitted = status[0].project_submitted;\n        if (this.projectHasAlreadyBeenSubmitted) {\n          this.readyButtonText = 'Project has been submitted';\n          this.readyButtonDisabled = true;\n        }\n        // get checklist items for team\n        const checklist = await this.performGetRequest(this.getEnvVariable('BACKEND'), 'projects/submission/checklist', params);\n        Object.values(checklist).forEach((k) => {\n          const item = this.checklistItems.find((j) => k.checklist_item_id === j.title);\n\n          if (item) {\n            item.id = k.id;\n            item.checked = k.is_checked;\n            if (item.checked) {\n              this.readyButtonClicked = true;\n              this.checklistCounter += 1;\n            }\n          }\n        });\n        this.currentTeamId = team[0].team_id;\n      }\n    },\n    toggleCheckboxChecked(id) {\n      const item = this.checklistItems.find((j) => id === j.id);\n      item.checked = !item.checked;\n      if (item.checked) {\n        this.checklistCounter += 1;\n      } else {\n        this.checklistCounter -= 1;\n      }\n    },\n  },\n  computed: {\n    checklistDisabled() {\n      return (this.devLink === '' || this.teamName === '') || this.checklistCounter !== this.checklistItems.length;\n    },\n  },\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.card,\n.card-body {\n  border: 0;\n  border-radius: var(--border-radius);\n  background-color: var(--color-foreground-accent);\n}\n\n.filler {\n  cursor: text !important;\n}\n\n.content-container {\n  border-radius: 8px;\n  padding: 3rem;\n  background-color: var(--color-foreground);\n  border-radius: 4px;\n  text-align: center;\n  margin-bottom: 2rem;\n}\n\n.checklist-item {\n  float: left;\n}\n\n.checklist-body {\n  width: 80%;\n  display: inline-block;\n}\n\n.form-control {\n  margin-bottom: 1rem;\n}\n</style>\n"]}]}